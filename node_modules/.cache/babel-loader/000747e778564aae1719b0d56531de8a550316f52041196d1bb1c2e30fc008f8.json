{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: !0\n});\nvar VALIDATOR_ARG_ERROR_MESSAGE = 'The typeValidator argument must be a function with the signature function(props, propName, componentName).',\n  MESSAGE_ARG_ERROR_MESSAGE = 'The error message is optional, but must be a string if provided.',\n  propIsRequired = function propIsRequired(a, b, c, d) {\n    if ('boolean' == typeof a) return a;\n    return 'function' == typeof a ? a(b, c, d) : !(!0 !== !!a) && !!a;\n  },\n  propExists = function propExists(a, b) {\n    return Object.hasOwnProperty.call(a, b);\n  },\n  missingPropError = function missingPropError(a, b, c, d) {\n    return d ? new Error(d) : new Error('Required ' + a[b] + ' `' + b + '`' + (' was not specified in `' + c + '`.'));\n  },\n  guardAgainstInvalidArgTypes = function guardAgainstInvalidArgTypes(a, b) {\n    if ('function' != typeof a) throw new TypeError(VALIDATOR_ARG_ERROR_MESSAGE);\n    if (!!b && 'string' != typeof b) throw new TypeError(MESSAGE_ARG_ERROR_MESSAGE);\n  },\n  isRequiredIf = function isRequiredIf(a, b, c) {\n    return guardAgainstInvalidArgTypes(a, c), function (d, e, f) {\n      for (var _len = arguments.length, g = Array(3 < _len ? _len - 3 : 0), _key = 3; _key < _len; _key++) g[_key - 3] = arguments[_key];\n      return propIsRequired(b, d, e, f) ? propExists(d, e) ? a.apply(void 0, [d, e, f].concat(g)) : missingPropError(d, e, f, c) : a.apply(void 0, [d, e, f].concat(g)); // Is not required, so just run typeValidator.\n    };\n  };\nexports.default = isRequiredIf;","map":{"version":3,"sources":["/Users/vijaydevkate/Documents/GitHub/Blog_React/Reactjs.Blog/React_Blog/node_modules/react-proptype-conditional-require/isRequiredIf.js"],"names":[],"mappings":";;;;;AAAA,IAAM,2BAAA,GAAA,4GAAN;EAIM,yBAAA,GACJ,kEALF;EAOM,cAAA,GAAA,SAAA,cAAiB,CAAC,CAAD,EAAY,CAAZ,EAAmB,CAAnB,EAA6B,CAA7B,EAA+C;IACpE,IAAyB,SAArB,IAAA,OAAO,CAAX,EACE,OAAO,CAAP;IAFkE,OAGpC,UAArB,IAAA,OAAO,CAHkD,GAI3D,CAAA,CAAU,CAAV,EAAiB,CAAjB,EAA2B,CAA3B,CAJ2D,GAAA,EAKzD,CAAA,CAAA,KAAA,CAAA,CAAQ,CALiD,CAAA,IAAA,CAAA,CAMnD,CAIlB;EAAA,CAjBD;EAmBM,UAAA,GAAA,SAAA,UAAa,CAAC,CAAD,EAAQ,CAAR,EAAA;IAAA,OAAqB,MAAA,CAAO,cAAP,CAAsB,IAAtB,CAA2B,CAA3B,EAAkC,CAAlC,CAArB;EAAA,CAnBnB;EAqBM,gBAAA,GAAA,SAAA,gBAAmB,CAAC,CAAD,EAAQ,CAAR,EAAkB,CAAlB,EAAiC,CAAjC,EAA6C;IAAA,OAChE,CADgE,GAE3D,IAAI,KAAJ,CAAU,CAAV,CAF2D,GAK7D,IAAI,KAAJ,CACL,WAAA,GAAY,CAAA,CAAM,CAAN,CAAZ,GAAA,IAAA,GAAiC,CAAjC,GAAA,GAAA,IAAA,yBAAA,GAC2B,CAD3B,GAAA,IAAA,CADK,CAIR;EAAA,CA9BD;EAgCM,2BAAA,GAAA,SAAA,2BAA8B,CAAC,CAAD,EAAgB,CAAhB,EAA4B;IAC9D,IAA6B,UAAzB,IAAA,OAAO,CAAX,EACE,MAAM,IAAI,SAAJ,CAAc,2BAAd,CAAN;IAGF,IAAI,CAAA,CAAQ,CAAR,IAAuC,QAAnB,IAAA,OAAO,CAA/B,EACE,MAAM,IAAI,SAAJ,CAAc,yBAAd,CAET;EAAA,CAxCD;EA0CM,YAAA,GAAA,SAAA,YAAe,CAAC,CAAD,EAAgB,CAAhB,EAA2B,CAA3B,EAAuC;IAC1D,OAAA,2BAAA,CAA4B,CAA5B,EAA2C,CAA3C,CAEA,EAAO,UAAC,CAAD,EAAQ,CAAR,EAAkB,CAAlB,EAA6C;MAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAT,CAAS,GAAA,KAAA,CAAA,CAAA,GAAA,IAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAT,CAAS,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;MAAA,OAC9C,cAAA,CAAe,CAAf,EAA0B,CAA1B,EAAiC,CAAjC,EAA2C,CAA3C,CAD8C,GAE5C,UAAA,CAAW,CAAX,EAAkB,CAAlB,CAF4C,GAGvC,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAc,CAAd,EAAqB,CAArB,EAA+B,CAA/B,CAAA,CAAA,MAAA,CAAiD,CAAjD,CAAA,CAHuC,GAMzC,gBAAA,CAAiB,CAAjB,EAAwB,CAAxB,EAAkC,CAAlC,EAAiD,CAAjD,CANyC,GAU3C,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAc,CAAd,EAAqB,CAArB,EAA+B,CAA/B,CAAA,CAAA,MAAA,CAAiD,CAAjD,CAAA,CAV2C,CASlD;IAED,CACF;EAAA,CAzDD;kBA2De,Y","sourcesContent":["const VALIDATOR_ARG_ERROR_MESSAGE =\n  'The typeValidator argument must be a function ' +\n  'with the signature function(props, propName, componentName).';\n\nconst MESSAGE_ARG_ERROR_MESSAGE =\n  'The error message is optional, but must be a string if provided.';\n\nconst propIsRequired = (condition, props, propName, componentName) => {\n  if (typeof condition === 'boolean') {\n    return condition;\n  } else if (typeof condition === 'function') {\n    return condition(props, propName, componentName);\n  } else if (Boolean(condition) === true) {\n    return Boolean(condition);\n  }\n\n  return false;\n};\n\nconst propExists = (props, propName) => Object.hasOwnProperty.call(props, propName);\n\nconst missingPropError = (props, propName, componentName, message) => {\n  if (message) {\n    return new Error(message);\n  }\n\n  return new Error(\n    `Required ${props[propName]} \\`${propName}\\`` +\n    ` was not specified in \\`${componentName}\\`.`,\n  );\n};\n\nconst guardAgainstInvalidArgTypes = (typeValidator, message) => {\n  if (typeof typeValidator !== 'function') {\n    throw new TypeError(VALIDATOR_ARG_ERROR_MESSAGE);\n  }\n\n  if (Boolean(message) && typeof message !== 'string') {\n    throw new TypeError(MESSAGE_ARG_ERROR_MESSAGE);\n  }\n};\n\nconst isRequiredIf = (typeValidator, condition, message) => {\n  guardAgainstInvalidArgTypes(typeValidator, message);\n\n  return (props, propName, componentName, ...rest) => {\n    if (propIsRequired(condition, props, propName, componentName)) {\n      if (propExists(props, propName)) {\n        return typeValidator(props, propName, componentName, ...rest);\n      }\n\n      return missingPropError(props, propName, componentName, message);\n    }\n\n    // Is not required, so just run typeValidator.\n    return typeValidator(props, propName, componentName, ...rest);\n  };\n};\n\nexport default isRequiredIf;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}